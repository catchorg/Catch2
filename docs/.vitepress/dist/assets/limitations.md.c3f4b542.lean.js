import{_ as s,c as n,o as a,a as l}from"./app.f3758f8e.js";const u=JSON.parse('{"title":"Known limitations","description":"","frontmatter":{},"headers":[{"level":2,"title":"Implementation limits","slug":"implementation-limits"},{"level":3,"title":"Sections nested in loops","slug":"sections-nested-in-loops"},{"level":3,"title":"Tests might be run again if last section fails","slug":"tests-might-be-run-again-if-last-section-fails"},{"level":3,"title":"MinGW/CygWin compilation (linking) is extremely slow","slug":"mingw-cygwin-compilation-linking-is-extremely-slow"},{"level":2,"title":"Features","slug":"features"},{"level":3,"title":"Thread safe assertions","slug":"thread-safe-assertions"},{"level":3,"title":"Process isolation in a test","slug":"process-isolation-in-a-test"},{"level":3,"title":"Running multiple tests in parallel","slug":"running-multiple-tests-in-parallel"},{"level":2,"title":"3rd party bugs","slug":"_3rd-party-bugs"},{"level":3,"title":"Visual Studio 2017 -- raw string literal in assert fails to compile","slug":"visual-studio-2017-raw-string-literal-in-assert-fails-to-compile"},{"level":3,"title":"Clang/G++ -- skipping leaf sections after an exception","slug":"clang-g-skipping-leaf-sections-after-an-exception"},{"level":3,"title":"libstdc++, _GLIBCXX_DEBUG macro and random ordering of tests","slug":"libstdc-glibcxx-debug-macro-and-random-ordering-of-tests"}],"relativePath":"limitations.md","lastUpdated":1637278379000}'),e={name:"limitations.md"},o=l("",45),p=[o];function t(r,c,i,F,D,y){return a(),n("div",null,p)}var C=s(e,[["render",t]]);export{u as __pageData,C as default};
