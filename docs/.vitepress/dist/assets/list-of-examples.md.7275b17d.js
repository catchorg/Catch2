import{_ as e,c as a,o as i,a as r}from"./app.f3758f8e.js";const x=JSON.parse('{"title":"List of examples","description":"","frontmatter":{},"headers":[{"level":2,"title":"Already available","slug":"already-available"},{"level":2,"title":"Planned","slug":"planned"}],"relativePath":"list-of-examples.md","lastUpdated":1645359042000}'),l={name:"list-of-examples.md"},p=r('<p><a id="top"></a></p><h1 id="list-of-examples" tabindex="-1">List of examples <a class="header-anchor" href="#list-of-examples" aria-hidden="true">#</a></h1><h2 id="already-available" tabindex="-1">Already available <a class="header-anchor" href="#already-available" aria-hidden="true">#</a></h2><ul><li>Test Case: <a href="../examples/010-TestCase.cpp">Single-file</a></li><li>Test Case: <a href="../examples/020-TestCase-1.cpp">Multiple-file 1</a>, <a href="../examples/020-TestCase-2.cpp">2</a></li><li>Assertion: <a href="../examples/030-Asn-Require-Check.cpp">REQUIRE, CHECK</a></li><li>Fixture: <a href="../examples/100-Fix-Section.cpp">Sections</a></li><li>Fixture: <a href="../examples/110-Fix-ClassFixture.cpp">Class-based fixtures</a></li><li>BDD: <a href="../examples/120-Bdd-ScenarioGivenWhenThen.cpp">SCENARIO, GIVEN, WHEN, THEN</a></li><li>Listener: <a href="../examples/210-Evt-EventListeners.cpp">Listeners</a></li><li>Configuration: <a href="../examples/231-Cfg-OutputStreams.cpp">Provide your own output streams</a></li><li>Generators: <a href="../examples/300-Gen-OwnGenerator.cpp">Create your own generator</a></li><li>Generators: <a href="../examples/301-Gen-MapTypeConversion.cpp">Use map to convert types in GENERATE expression</a></li><li>Generators: <a href="../examples/302-Gen-Table.cpp">Run test with a table of input values</a></li><li>Generators: <a href="../examples/310-Gen-VariablesInGenerators.cpp">Use variables in generator expressions</a></li><li>Generators: <a href="../examples/311-Gen-CustomCapture.cpp">Use custom variable capture in generator expressions</a></li></ul><h2 id="planned" tabindex="-1">Planned <a class="header-anchor" href="#planned" aria-hidden="true">#</a></h2><ul><li>Assertion: <a href="../examples/040-Asn-RequireThat.cpp">REQUIRE_THAT and Matchers</a></li><li>Assertion: <a href="../examples/050-Asn-RequireNoThrow.cpp">REQUIRE_NO_THROW</a></li><li>Assertion: <a href="../examples/050-Asn-RequireThrows.cpp">REQUIRE_THROWS</a></li><li>Assertion: <a href="../examples/070-Asn-RequireThrowsAs.cpp">REQUIRE_THROWS_AS</a></li><li>Assertion: <a href="../examples/080-Asn-RequireThrowsWith.cpp">REQUIRE_THROWS_WITH</a></li><li>Assertion: <a href="../examples/090-Asn-RequireThrowsMatches.cpp">REQUIRE_THROWS_MATCHES</a></li><li>Floating point: <a href="../examples/130-Fpt-Approx.cpp">Approx - Comparisons</a></li><li>Logging: <a href="../examples/140-Log-Capture.cpp">CAPTURE - Capture expression</a></li><li>Logging: <a href="../examples/150-Log-Info.cpp">INFO - Provide information with failure</a></li><li>Logging: <a href="../examples/160-Log-Warn.cpp">WARN - Issue warning</a></li><li>Logging: <a href="../examples/170-Log-Fail.cpp">FAIL, FAIL_CHECK - Issue message and force failure/continue</a></li><li>Logging: <a href="../examples/180-Log-Succeed.cpp">SUCCEED - Issue message and continue</a></li><li>Report: <a href="../examples/190-Rpt-ReportUserDefinedType.cpp">User-defined type</a></li><li>Report: <a href="../examples/202-Rpt-UserDefinedReporter.cpp">User-defined reporter</a></li><li>Report: <a href="../examples/205-Rpt-AutomakeReporter.cpp">Automake reporter</a></li><li>Report: <a href="../examples/206-Rpt-TapReporter.cpp">TAP reporter</a></li><li>Report: <a href="../examples/208-Rpt-MultipleReporters.cpp">Multiple reporter</a></li><li>Configuration: <a href="../examples/220-Cfg-OwnMain.cpp">Provide your own main()</a></li><li>Configuration: <a href="../examples/230-Cfg-CompileTimeConfiguration.cpp">Compile-time configuration</a></li><li>Configuration: <a href="../examples/240-Cfg-RunTimeConfiguration.cpp">Run-time configuration</a></li></ul><hr><p><a href="./Readme.html#top">Home</a></p>',8),s=[p];function t(n,o,f,c,h,m){return i(),a("div",null,s)}var d=e(l,[["render",t]]);export{x as __pageData,d as default};
